spring.application.name=UrbanTracker

# Database configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://localhost:5432/UrbanTracker
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver

# Ejecutar scripts SQL antes de Hibernate
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema-init.sql
spring.sql.init.platform=postgresql

# Hibernate
spring.jpa.defer-datasource-initialization=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Server
server.port=8080

# MQTT / Mosquitto settings
mqtt.broker-url=tcp://${MQTT_HOST:mosquitto}:${MQTT_PORT:1883}
mqtt.client-id=urbantracker-backend
mqtt.username=
mqtt.password=
mqtt.clean-session=true
mqtt.automatic-reconnect=true
mqtt.connection-timeout=10
mqtt.keep-alive-interval=20
mqtt.reconnect=true

# Topics
mqtt.topic.subscribe=vehicles/+/telemetry
mqtt.topic.publish=urbantracker/events
mqtt.qos=1

# Gmail SMTP server
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=urbantracker751@gmail.com
spring.mail.password=clwjsosznbigwgoh
